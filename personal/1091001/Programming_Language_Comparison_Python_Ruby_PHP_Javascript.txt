- Python 의 장점
: Python은 다른 프로그래밍언어와는 다르게 첫 버전부터 객체지향적으로 만들어졌다.
다른언어와는 다르게 컴파일러 언어가 아닌 스크립트 언어 형식이라서 이용하는사람들이 비교적 
쉽고 빠르게 배울 수 있다는 장점이 있다.데이터형의 선언이 따로 필요없기 때문에 프로그래밍을 하려는 사람들에게는 
아주 쉽게 다가올 수 있는 큰 장점이라고 생각한다. 왜냐하면 프로그래밍이라는 것 자체가 쉽게 다가 갈 수 있는 분야가 아니기 때문이다.
그리고 사람이 생각하는 머릿 속의 알고리즘을 실제 구현과 거의 흡사하게 만드는 것이 쉽다고 할 수 있다. 
Python의 특징 중에는 Glue 언어가 있다. 이는 프로그래밍시 사용해야하는 많은 라이브러리를 import 할 수 있다는 것이다. 
C라이브러리, 자바 쪽또한 연관 가능하다. 문법이 짧고 간단하고 수준이 높은 내장 객체자료형이 지원되고 메모리를 자동관리하기
때문에 팀원들끼리 소스를 구현할 때 유용하다고 할 수 있다. 

- Ruby 의 장점
: Ruby는 오픈소스 웹 응용체계를 개발하기 위한 언어이다. 출력 및 수정의 방식이 완전 무결정방식인 패턴을 가지고 있다. 
프로그래밍과 구현을 최소화하여 보다 코딩을 쉽게 하려는 것이 Ruby 의 장점이다. 큰 장점으로는 간단하게 간단한 문법,실용적인 속도향상에 있다.
Ruby는 사용자에 따라서는 Java를 사용하는 것 보다배는 더 빠르게 개발할 수 있다고 한다. 그러나 이것은 Ruby을 사용하는 사람이 그 만큼 익숙해져야 한다는 것을 의미한다.
속도면에서 빨라졌지만 질적으로 놓치는게 많다고 할 수는 없다. 오히려 놓치지않고 그 완성도 역시 우수하다. 
Ruby의 프로그래밍은 익숙해지기전에 얼마나 다가가기 쉬운가에 차이점이 있다. Ruby는 내장 클래스 변경이 용이하기 때문에 사용자들이 
프로그래밍을 함에 있어서 더 맘편히 할 수 있을 것이다. 또한 훨씬 적은 코드로 어플 구축이 가능하기 때문에 유지 및 보수가 쉬워진다고 할 수 있다. 

-  PHP 의 장점
: PHP은 Ruby 와 같이 MVC 모델을 따르고 있으며 다른점은 라인의 복잡한 코딩의 리스크가 없다는 것이다. 최적화된 코딩을 지원하여 쉽고 빠르게 실행된다.
그리고, 내장된 코어 라이브러리를 가지고있기 때문에 코딩의 무게가 훨 씬 가볍다. 굳이 복잡한 코딩 구조를 수행하지 않아도 된다는 뜻이다.
몇 가지 기본적인 기능은 다른 것에서 사용되는 동일한 코드를 재사용 할 수있다는 큰 장점이 있다.
나는 PHP가 무엇인지 잘 몰랐기 때문에 PHP의 신뢰성이 어느정도 인지 몰랐다. 하지만 전 세계 수백만의 서버에서 실행되고 있고,
그 만큼 근복적으로 충분히 강하고 안정적이다는 것을 뜻한다. 또한 프로그래밍 오류에 있어서 구체적인 디버깅 방법을 제공하기 때문에 간편하게 디버깅을
실행 할 수 있을 것이다.  

- Javascript 의 장점
: 우선 Javascript 의 큰 장점은 명령어의 수가 많지않고, 문법이 쉽기때문에 프로그래밍 구현이 쉬운편이다. 
다른 프로그래밍언어에 비하여 컴파일과정이 없어 접근하기가 쉽다고 할 수 있다. 그리고 서버가 따로 없기때문에
다른 플랫폼을 필요로하지 않아서 브라우저만 있다면 사용자들이 접근 하기 편하기 때문에 컴퓨터에 부담을 줄여준다.


-각 프로그래밍언어의 차이점
:실행 속도면에서는 Javascript -> PHP -> Ruby -> Python 으로 자바스크립트가 가장 빠르고 파이썬이 가장 느리다.
그러나 위에서 말했듯이 어떠한 언어가 더 빠르고 느린가에 대한 것은 사용자에 따라 다르다. 이것은 논리적인 속도 비교를 말하는 것이다.


