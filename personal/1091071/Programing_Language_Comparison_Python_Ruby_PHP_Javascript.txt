python-결론부터 말하면 파이썬은 다른 언어에 비해 언어가 간단하여 편리하였다. 가장 신기했던 점은 자료형을 선언해주지 
않아도 되는게 제일 신기하였다. 대부분의 자료형이 동적으로 만들어져 편리 하였다.또한 간단한 문법과 명료하고 깔끔한 구문이
배우기 쉽고, 읽고 이해하기도 쉬웠다. ruby와 마찬가지로 객체지향언어 였으며 한줄씩 실행하는 인터프리트 언어였다. 1학년때
배웠더 C언어와 비교해보면 컴파일 조차도 못하면 컴파일러에서 나오는 에러 메세지로 수정을 해야하지만 파이썬 언어는 입력 
즉시 실행이 되거나 에러를 알려주었다. 이로써 개발하는 시간을 굉장히 많이 줄일수 있을것이라 생각했다. 지금까지 C언어로 
코딩을 할때 에러잡는데 썻었던 시간을 생각하면 파이썬은 그 에러를 찾는데 걸리는 시간을 엄청나게 줄일수 있을것이라 생각이든
다. 이번기회로 인해 파이썬에 대해 더 심도있게 공부를 해봐야겠다는 생각을 했다.

Ruby- 루비도 역시 파이썬처럼 문법이 간결하고 사용하기 쉬웠다. 아직 심도있게 공부를 한것이 아니라 자세히는 모르겠지만 
몇일 이것저것 해보면서 느낀점은 간결한 문법이라 표현하는게 맞는 표현같다. 몇개의 간결한 코드를 작성을 해보았는데 정말 
문법이 간단했다. 인터넷에서 루비에대해 조금 공부를 하고 이해하는데 정말 쉬웠다. 여러 예문을 보면서 이해를 하는데 
개인적으로 다른언어에 비해 쉬웠던 느낌이 들었다. ruby를 공부하면서 Mixin이라는 것에 대해 공부도 하게되었다. Mixin은 
다중상속 문제를 해결하기 위한 개발 패턴이다. 즉, 클래스에 새로운 특징을 더 추가해서 여러가지 기능을 필요한 곳에서 가져와
새로운 클래스를 만드는 것이다. 하지만 나에게 강력한 호기심을 느낄만한 임팩트를 주지는 못했다.

php- php는 사용하기전 간단하게 조사를 해보았다. 어려운말들이 많았지만 결론은 다른언어와 비교적 간단하게 웹프로그래밍을 
할 수있는 언어였다. 사용을 하면서 느낀점은 C와 java의 느낌을 받았다. 하지만 java와 C의 복잡한 문법을 제외했다는 느낌을 
받았다. 무작정 사용하기전에 여러가지 예문을 분석하여 문법과 언어스타일을 보았다. 객체를 지향하는 복잡한 프로그래밍도 가능
하게 하는 언어였다. 다른 예문과 강의를 조금 보았는데 데이터베이스 연동이 편리하고 지원가능한 DB가 많이 있다는것에 강력한
인상을 받았다. 평소 리눅스에 관심이 많았는데 리눅스에서도 구현이 가능하다는 것에도 조금 놀랐다. 또한 php언어를 잠깐 공부하는
동안 쉽게 이해하고 배울수 있다는 언어라는 느낌을 받았다. 

javascript- javascript를 공부하면서 느낀점은 명령어의 수가 많이 없었다. 1시간짜리 강좌를 봤는데 문법적으로도 배우기도 
쉬웠고 빠르게 개발이 가능하다는것을 배울수 있었다. C처럼 컴파일언어가 아니라서 그런지 컴파일과 링크과정이 필요가 없었기
때문에 즉시 실행이 가능했다. javascript의 함수를 찾아 보았는데 사용할 수 있는 함수의 갯수가 다른언어에 비해 적었다. 
어떻게 보면 간단하고 어렵지않은 간편한 언어이지만 함수가 적으므로써 원하는 프로그램을 구현하기에는 적지 않나 싶은 생각이
들었다. javascript를 공부하면서 여러 소스코드를 쉽게 찾아 공부하고 볼 수있어 과제를 하는동안 충분히 javascript의 문법적인
느낌을 받을 수 있었다. 결과적으로 자바스크립트는 전체적으로 다른언어에비해 가볍다라는 느낌을 받을수 있었다.          
